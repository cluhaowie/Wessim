{"name":"Simexon","google":"","body":"### Introduction\r\n**Simexon** is a simulator for a targeted resequencing as generally known as exome sequencing. Simexon basically generates a set of *artificial* DNA fragments for next generation sequencing (NGS) read simulation. In the targeted resequencing, we constraint the genomic regions that are used to generated DNA fragments to be only a part of the entire genome; they are usually exons and/or a few introns and untranslated regions (UTRs).\r\n\r\n### Install Simexon\r\nTo run Simexon, Python 2.7 or later is required. To install Python, go to http://python.org/\r\n\r\nDownload Simexon using the links in this page, or go to https://github.com/sak042/Simexon\r\n\r\n### Requirements\r\nThe following programs are required to run Simexon or to prepare input files:\r\n* **pysam** library: go to http://code.google.com/p/pysam/ to install pysam\r\n* **numpy** library: go to http://numpy.scipy.org/ to install numpy\r\n* **gfServer** and **gfClient**: In probe hybridization mode, Simexon runs more than 100,000 queries again the reference genome. This essentially requires a local blat server. gfServer and gfClient are pre-compiled programs for establishing private blat server on your computer. go to http://hgdownload.cse.ucsc.edu/admin/exe/ to download gfServer and gfClient (and set your local path to access the two programs anywhere). For more details about the tools, please refer to http://genome.ucsc.edu/FAQ/FAQblat.html#blat5\r\n* **faToTwoBit**: go to http://hgdownload.cse.ucsc.edu/admin/exe/ and download faToTwoBit. This is required to convert your FASTA file to .2bit \r\n* **samtools**: samtools is needed to index your sample genome FASTA file (samtools faidx).\r\n* **GemSim** error models: Simexon uses GemSim's empirical error models for NGS read generation. Go to GemSim's project page (http://sourceforge.net/projects/gemsim/) to download GemSim. You will find several model files (e.g. ill100v4_p.gzip) under 'models' directory. Save them and remember their location.\r\n \r\n### Preparing Input Files \r\nSimexon requires two major inputs. One is the sample genome sequence, and the other is the target region information.\r\n* **Sample genome sequence**: This is a FASTA file (e.g. ref.fa). You will need to index the file and generate .2bit\r\n<pre><code>\r\n>samtools faidx ref.fa\r\n>faToTwoBit ref.fa ref.2bit\r\n</code></pre>\r\n* **Target region information**: Target regions can be specified by two different ways. \r\n    1. **Ideal targets**: In ideal target mode, you will provide a list of genomic coordinates in a BED  file (e.g. chr1   798833 799125). Ideal targets of major exome capture platforms are freely available from vendor's website. For Agilent's SureSelect platforms, go to https://earray.chem.agilent.com/suredesign/ . You must register at their site. After logging in, go to Find Designs and select Agilent Catalog at the menu tab. You will be able to download all information of currently available platforms including ideal target BED files and probe sequence text files.   For NimbleGen's SeqCap go to http://www.nimblegen.com/products/seqcap/index.html and find BED files under Design and Annotation Files. \r\n    2. **Probe sequences**: Probe sequences are available for SureSelect platforms in the SureDesign homepage (https://earray.chem.agilent.com/suredesign/) (see above). Usually those files are named \"[platform]_probe.txt\"\r\n\r\n### Running Simexon\r\nThe basic synopsis of Simexon1 is like below:\r\n<pre><code>\r\n# Run Simexon1 in ideal target mode\r\n>python Simexon1.py -R ref.fa -B target.bed -n 1000000 -l 100 -M model.gzip -z -o result\r\n</code></pre>\r\nFor Simexon2:\r\n<pre><code>\r\n# Generate a FASTA file of probe sequence\r\n>python Prep_Probe2Fa.py probe.txt (this generates probe.txt.fa)\r\n# Establish your local blat server\r\n>gfServer start -canStop localhost 6666 ref.2bit\r\n# Run blat search to generate the match list \r\n>python Prep_BlatSearch.py ref.2bit probe.txt.fa probe.txt.fa.psl\r\n# Run Simexon2 in probe hybridization mode.\r\n>python Simexon2.py -R ref.fa -P probe.txt.fa -B probe_match.txt.fa.psl -n 1000000 -l 76 -M model.gzip -pz -o result2\r\n</code></pre>\r\n\r\n\r\n\r\n### Authors and Contributors\r\nYou can @mention a GitHub username to generate a link to their profile. The resulting `<a>` element will link to the contributor's GitHub Profile. For example: In 2007, Chris Wanstrath (@defunkt), PJ Hyett (@pjhyett), and Tom Preston-Werner (@mojombo) founded GitHub.\r\n\r\n### Support or Contact\r\nHaving trouble with Pages? Check out the documentation at http://help.github.com/pages or contact support@github.com and weâ€™ll help you sort it out.","tagline":"Simexon: A targeted resequencing (exome sequencing) simulator","note":"Don't delete this file! It's used internally to help with page regeneration."}