{"note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Simexon","body":"### Introduction\r\n**Simexon** is a simulator for a targeted resequencing as generally known as exome sequencing. Simexon basically generates a set of *artificial* DNA fragments for next generation sequencing (NGS) read simulation. In the targeted resequencing, we constraint the genomic regions that are used to generated DNA fragments to be only a part of the entire genome; they are usually exons and/or a few introns and untranslated regions (UTRs).\r\n\r\n### Install Simexon\r\nTo run Simexon, Python 2.7 or later is required. To install Python, go to http://python.org/\r\nDownload Simexon using the links in this page, or go to https://github.com/sak042/Simexon\r\n\r\n### Requirements\r\nThe following programs are required to run Simexon or to prepare input files:\r\n* pysam library: go to http://code.google.com/p/pysam/ to install pysam\r\n* gfServer and gfClient: In probe hybridization mode, Simexon runs more than 100,000 queries again the reference genome. This essentially requires a local blat server. gfServer and gfClient are pre-compiled programs for establishing private blat server on your computer. go to http://hgdownload.cse.ucsc.edu/admin/exe/ to download gfServer and gfClient (and set your local path to access the two programs anywhere). For more details about the tools, please refer to http://genome.ucsc.edu/FAQ/FAQblat.html#blat5\r\n\r\n\r\n\r\n\r\nTo run **Simexon**, the followings are required.\r\n#### Input ####\r\n* *sample genome*: a faidx indexed FASTA format file of your sample genome sequence (e.g. hg19.fa).\r\n* *target regions*: a set of designated genomic regions in either of the below formats:\r\n    * ideal targets: a set of genomic coordinates *(chromosome, start, end)* in a tab-delimited BED file.\r\n    * probe sequences: \r\n\r\n### Welcome to GitHub Pages.\r\nThis automatic page generator is the easiest way to create beautiful pages for all of your projects. Author your page content here using GitHub Flavored Markdown, select a template crafted by a designer, and publish. After your page is generated, you can check out the new branch:\r\n\r\n```\r\n$ cd your_repo_root/repo_name\r\n$ git fetch origin\r\n$ git checkout gh-pages\r\n```\r\n\r\nIf you're using the GitHub for Mac, simply sync your repository and you'll see the new branch.\r\n\r\n### Designer Templates\r\nWe've crafted some handsome templates for you to use. Go ahead and continue to layouts to browse through them. You can easily go back to edit your page before publishing. After publishing your page, you can revisit the page generator and switch to another theme. Your Page content will be preserved if it remained markdown format.\r\n\r\n### Rather Drive Stick?\r\nIf you prefer to not use the automatic generator, push a branch named `gh-pages` to your repository to create a page manually. In addition to supporting regular HTML content, GitHub Pages support Jekyll, a simple, blog aware static site generator written by our own Tom Preston-Werner. Jekyll makes it easy to create site-wide headers and footers without having to copy them across every page. It also offers intelligent blog support and other advanced templating features.\r\n\r\n### Authors and Contributors\r\nYou can @mention a GitHub username to generate a link to their profile. The resulting `<a>` element will link to the contributor's GitHub Profile. For example: In 2007, Chris Wanstrath (@defunkt), PJ Hyett (@pjhyett), and Tom Preston-Werner (@mojombo) founded GitHub.\r\n\r\n### Support or Contact\r\nHaving trouble with Pages? Check out the documentation at http://help.github.com/pages or contact support@github.com and weâ€™ll help you sort it out.","google":"","tagline":"Simexon: A targeted resequencing (exome sequencing) simulator"}